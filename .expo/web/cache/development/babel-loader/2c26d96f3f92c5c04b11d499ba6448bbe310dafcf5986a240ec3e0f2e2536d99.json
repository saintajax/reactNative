{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  email: \"\",\n  password: \"\"\n};\nvar LoginForm = function LoginForm() {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataForm = _useState2[0],\n    setDataForm = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isKeyboardVisible = _useState4[0],\n    setIsKeyboardVisible = _useState4[1];\n  var _useState5 = useState(function () {\n      Dimensions.get(\"window\").width - 16 * 2;\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    dimensions = _useState6[0],\n    setDimensions = _useState6[1];\n  useEffect(function () {\n    var onChange = function onChange() {\n      var width = Dimensions.get(\"window\").width - 16 * 2;\n      setDimensions(width);\n    };\n    Dimensions.addEventListener(\"change\", onChange);\n    return function () {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  }, []);\n  var handleSubmit = function handleSubmit() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    setDataForm(initialState);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: handleSubmit,\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(KeyboardAvoidingView, {\n        behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n        children: [_jsx(Text, {\n          style: styles.titleText,\n          children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n        }), _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.form), {}, {\n            paddingBottom: isShowKeyboard ? 32 : 78,\n            width: dimensions\n          }),\n          children: [_jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0457 \\u043F\\u043E\\u0448\\u0442\\u0438\",\n            onChangeText: function onChangeText(value) {\n              return setDataForm(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  email: value\n                });\n              });\n            },\n            value: dataForm.login,\n            keyboardType: \"email-address\",\n            onFocus: function onFocus() {\n              return setIsKeyboardVisible(true);\n            }\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            onChangeText: function onChangeText(value) {\n              return setDataForm(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  password: value\n                });\n              });\n            },\n            value: dataForm.password,\n            secureTextEntry: true,\n            onFocus: function onFocus() {\n              return setIsKeyboardVisible(true);\n            }\n          }), _jsx(TouchableOpacity, {\n            style: styles.btn,\n            children: _jsx(Text, {\n              style: styles.textBtn,\n              children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n            })\n          })]\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"\n        })]\n      })\n    })\n  });\n};\nexport default LoginForm;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    borderTopStartRadius: 25,\n    borderTopEndRadius: 25,\n    alignItems: \"center\"\n  },\n  titleText: {\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 30,\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginVertical: 33\n  },\n  form: {},\n  input: {\n    height: 50,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    padding: 15,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 8,\n    color: \"#BDBDBD\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400\n  },\n  btn: {\n    height: 50,\n    marginHorizontal: 16,\n    marginTop: 27,\n    marginBottom: 16,\n    justifyContent: \"center\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100\n  },\n  textBtn: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400\n  },\n  text: {\n    textAlign: \"center\",\n    marginBottom: 144,\n    color: \"#1B4371\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","TextInput","View","TouchableOpacity","Platform","KeyboardAvoidingView","Dimensions","TouchableWithoutFeedback","jsx","_jsx","jsxs","_jsxs","initialState","email","password","LoginForm","_useState","_useState2","_slicedToArray","dataForm","setDataForm","_useState3","_useState4","isKeyboardVisible","setIsKeyboardVisible","_useState5","get","width","_useState6","dimensions","setDimensions","onChange","addEventListener","removeEventListener","handleSubmit","setIsShowKeyboard","Keyboard","dismiss","onPress","children","style","styles","container","behavior","OS","titleText","_objectSpread","form","paddingBottom","isShowKeyboard","input","placeholder","onChangeText","value","prevState","login","keyboardType","onFocus","secureTextEntry","btn","textBtn","text","create","backgroundColor","borderTopStartRadius","borderTopEndRadius","alignItems","fontFamily","fontSize","fontWeight","textAlign","marginVertical","height","marginHorizontal","marginBottom","padding","borderRadius","color","marginTop","justifyContent"],"sources":["/Users/admin/Documents/Stepan GO IT/reactNative/myFirstRNproject/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  KeyboardAvoidingView,\n  Dimensions,\n  TouchableWithoutFeedback,\n} from \"react-native\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nconst LoginForm = () => {\n  const [dataForm, setDataForm] = useState(initialState);\n  const [isKeyboardVisible, setIsKeyboardVisible] = useState(false);\n  const [dimensions, setDimensions] = useState(() => {\n    Dimensions.get(\"window\").width - 16 * 2;\n  });\n\n  useEffect(() => {\n    const onChange = () => {\n      const width = Dimensions.get(\"window\").width - 16 * 2;\n      setDimensions(width);\n    };\n    Dimensions.addEventListener(\"change\", onChange);\n    return () => {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  }, []);\n\n  const handleSubmit = () => {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    setDataForm(initialState);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={handleSubmit}>\n      <View style={styles.container}>\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        >\n          <Text style={styles.titleText}>Увійти</Text>\n          <View\n            style={{\n              ...styles.form,\n              paddingBottom: isShowKeyboard ? 32 : 78,\n              width: dimensions,\n            }}\n          >\n            <TextInput\n              style={styles.input}\n              placeholder=\"Адреса електронної пошти\"\n              onChangeText={(value) =>\n                setDataForm((prevState) => ({ ...prevState, email: value }))\n              }\n              value={dataForm.login}\n              keyboardType=\"email-address\"\n              onFocus={() => setIsKeyboardVisible(true)}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Пароль\"\n              onChangeText={(value) =>\n                setDataForm((prevState) => ({ ...prevState, password: value }))\n              }\n              value={dataForm.password}\n              secureTextEntry={true}\n              onFocus={() => setIsKeyboardVisible(true)}\n            />\n            <TouchableOpacity style={styles.btn}>\n              <Text style={styles.textBtn}>Увійти</Text>\n            </TouchableOpacity>\n          </View>\n          <Text style={styles.text}>Немає акаунта? Зареєструватися</Text>\n        </KeyboardAvoidingView>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default LoginForm;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#fff\",\n    borderTopStartRadius: 25,\n    borderTopEndRadius: 25,\n    alignItems: \"center\",\n  },\n\n  titleText: {\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 30,\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginVertical: 33,\n  },\n\n  form: {},\n\n  input: {\n    height: 50,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    padding: 15,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 8,\n    color: \"#BDBDBD\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400,\n  },\n\n  btn: {\n    height: 50,\n    marginHorizontal: 16,\n    marginTop: 27,\n    marginBottom: 16,\n    justifyContent: \"center\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100,\n  },\n\n  textBtn: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400,\n  },\n\n  text: {\n    textAlign: \"center\",\n    marginBottom: 144,\n    color: \"#1B4371\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400,\n  },\n});\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,oBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,wBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAanD,IAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAAC,SAAA,GAAgCnB,QAAQ,CAACe,YAAY,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAkDxB,QAAQ,CAAC,KAAK,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA1DE,iBAAiB,GAAAD,UAAA;IAAEE,oBAAoB,GAAAF,UAAA;EAC9C,IAAAG,UAAA,GAAoC5B,QAAQ,CAAC,YAAM;MACjDS,UAAU,CAACoB,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,GAAG,EAAE,GAAG,CAAC;IACzC,CAAC,CAAC;IAAAC,UAAA,GAAAV,cAAA,CAAAO,UAAA;IAFKI,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAIhC9B,SAAS,CAAC,YAAM;IACd,IAAMiC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;MACrB,IAAMJ,KAAK,GAAGrB,UAAU,CAACoB,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,GAAG,EAAE,GAAG,CAAC;MACrDG,aAAa,CAACH,KAAK,CAAC;IACtB,CAAC;IACDrB,UAAU,CAAC0B,gBAAgB,CAAC,QAAQ,EAAED,QAAQ,CAAC;IAC/C,OAAO,YAAM;MACXzB,UAAU,CAAC2B,mBAAmB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBC,iBAAiB,CAAC,KAAK,CAAC;IACxBC,QAAQ,CAACC,OAAO,EAAE;IAClBjB,WAAW,CAACR,YAAY,CAAC;EAC3B,CAAC;EAED,OACEH,IAAA,CAACF,wBAAwB;IAAC+B,OAAO,EAAEJ,YAAa;IAAAK,QAAA,EAC9C9B,IAAA,CAACP,IAAI;MAACsC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,EAC5B5B,KAAA,CAACN,oBAAoB;QACnBsC,QAAQ,EAAEvC,QAAQ,CAACwC,EAAE,KAAK,KAAK,GAAG,SAAS,GAAG,QAAS;QAAAL,QAAA,GAEvD9B,IAAA,CAACT,IAAI;UAACwC,KAAK,EAAEC,MAAM,CAACI,SAAU;UAAAN,QAAA,EAAC;QAAM,EAAO,EAC5C5B,KAAA,CAACT,IAAI;UACHsC,KAAK,EAAAM,aAAA,CAAAA,aAAA,KACAL,MAAM,CAACM,IAAI;YACdC,aAAa,EAAEC,cAAc,GAAG,EAAE,GAAG,EAAE;YACvCtB,KAAK,EAAEE;UAAU,EACjB;UAAAU,QAAA,GAEF9B,IAAA,CAACR,SAAS;YACRuC,KAAK,EAAEC,MAAM,CAACS,KAAM;YACpBC,WAAW,EAAC,wIAA0B;YACtCC,YAAY,EAAE,SAAAA,aAACC,KAAK;cAAA,OAClBjC,WAAW,CAAC,UAACkC,SAAS;gBAAA,OAAAR,aAAA,CAAAA,aAAA,KAAWQ,SAAS;kBAAEzC,KAAK,EAAEwC;gBAAK;cAAA,CAAG,CAAC;YAAA,CAC7D;YACDA,KAAK,EAAElC,QAAQ,CAACoC,KAAM;YACtBC,YAAY,EAAC,eAAe;YAC5BC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMjC,oBAAoB,CAAC,IAAI,CAAC;YAAA;UAAC,EAC1C,EACFf,IAAA,CAACR,SAAS;YACRuC,KAAK,EAAEC,MAAM,CAACS,KAAM;YACpBC,WAAW,EAAC,sCAAQ;YACpBC,YAAY,EAAE,SAAAA,aAACC,KAAK;cAAA,OAClBjC,WAAW,CAAC,UAACkC,SAAS;gBAAA,OAAAR,aAAA,CAAAA,aAAA,KAAWQ,SAAS;kBAAExC,QAAQ,EAAEuC;gBAAK;cAAA,CAAG,CAAC;YAAA,CAChE;YACDA,KAAK,EAAElC,QAAQ,CAACL,QAAS;YACzB4C,eAAe,EAAE,IAAK;YACtBD,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMjC,oBAAoB,CAAC,IAAI,CAAC;YAAA;UAAC,EAC1C,EACFf,IAAA,CAACN,gBAAgB;YAACqC,KAAK,EAAEC,MAAM,CAACkB,GAAI;YAAApB,QAAA,EAClC9B,IAAA,CAACT,IAAI;cAACwC,KAAK,EAAEC,MAAM,CAACmB,OAAQ;cAAArB,QAAA,EAAC;YAAM;UAAO,EACzB;QAAA,EACd,EACP9B,IAAA,CAACT,IAAI;UAACwC,KAAK,EAAEC,MAAM,CAACoB,IAAK;UAAAtB,QAAA,EAAC;QAA8B,EAAO;MAAA;IAC1C;EAClB,EACkB;AAE/B,CAAC;AAED,eAAexB,SAAS;AAExB,IAAM0B,MAAM,GAAG1C,UAAU,CAAC+D,MAAM,CAAC;EAC/BpB,SAAS,EAAE;IACTqB,eAAe,EAAE,MAAM;IACvBC,oBAAoB,EAAE,EAAE;IACxBC,kBAAkB,EAAE,EAAE;IACtBC,UAAU,EAAE;EACd,CAAC;EAEDrB,SAAS,EAAE;IACTsB,UAAU,EAAE,eAAe;IAC3BC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,GAAG;IACfC,SAAS,EAAE,QAAQ;IACnBC,cAAc,EAAE;EAClB,CAAC;EAEDxB,IAAI,EAAE,CAAC,CAAC;EAERG,KAAK,EAAE;IACLsB,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXZ,eAAe,EAAE,SAAS;IAC1Ba,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,SAAS;IAChBV,UAAU,EAAE,gBAAgB;IAC5BC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EAEDV,GAAG,EAAE;IACHa,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBK,SAAS,EAAE,EAAE;IACbJ,YAAY,EAAE,EAAE;IAChBK,cAAc,EAAE,QAAQ;IACxBhB,eAAe,EAAE,SAAS;IAC1Ba,YAAY,EAAE;EAChB,CAAC;EAEDhB,OAAO,EAAE;IACPU,SAAS,EAAE,QAAQ;IACnBO,KAAK,EAAE,MAAM;IACbV,UAAU,EAAE,gBAAgB;IAC5BC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EAEDR,IAAI,EAAE;IACJS,SAAS,EAAE,QAAQ;IACnBI,YAAY,EAAE,GAAG;IACjBG,KAAK,EAAE,SAAS;IAChBV,UAAU,EAAE,gBAAgB;IAC5BC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}