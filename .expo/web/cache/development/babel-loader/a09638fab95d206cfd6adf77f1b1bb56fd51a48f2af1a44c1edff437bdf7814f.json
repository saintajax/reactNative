{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LoginForm from \"./src/screens/LoginScreen\";\nimport RegistrationForm from \"./src/screens/RegistrationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useFonts = useFonts({\n      \"Roboto-Regular\": require(\"./src/fonts/Roboto/Roboto-Regular.ttf\"),\n      \"Roboto-Medium\": require(\"./src/fonts/Roboto/Roboto-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(View, {\n    onLayout: onLayoutRootView,\n    style: styles.container,\n    children: _jsx(RegistrationForm, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#fff\"\n  },\n  text: {\n    color: \"black\"\n  }\n});","map":{"version":3,"names":["SplashScreen","useFonts","useCallback","StyleSheet","View","Text","LoginForm","RegistrationForm","jsx","_jsx","preventAutoHideAsync","App","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","onLayout","style","styles","container","children","create","flex","justifyContent","backgroundColor","text","color"],"sources":["/Users/admin/Documents/Stepan GO IT/reactNative/myFirstRNproject/App.js"],"sourcesContent":["import * as SplashScreen from \"expo-splash-screen\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport LoginForm from \"./src/screens/LoginScreen\";\nimport RegistrationForm from \"./src/screens/RegistrationScreen\";\n\nSplashScreen.preventAutoHideAsync();\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    \"Roboto-Regular\": require(\"./src/fonts/Roboto/Roboto-Regular.ttf\"),\n    \"Roboto-Medium\": require(\"./src/fonts/Roboto/Roboto-Medium.ttf\"),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View onLayout={onLayoutRootView} style={styles.container}>\n      {/* <LoginForm /> */}\n      <RegistrationForm />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    backgroundColor: \"#fff\",\n  },\n\n  text: { color: \"black\" },\n});\n"],"mappings":";;AAAA,OAAO,KAAKA,YAAY,MAAM,oBAAoB;AAClD,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,WAAW,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEpC,OAAOC,SAAS;AAChB,OAAOC,gBAAgB;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAEhET,YAAY,CAACU,oBAAoB,EAAE;AAEnC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBX,QAAQ,CAAC;MAC7B,gBAAgB,EAAEY,OAAO,yCAAyC;MAClE,eAAe,EAAEA,OAAO;IAC1B,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAHKI,WAAW,GAAAF,UAAA;EAKlB,IAAMG,gBAAgB,GAAGf,WAAW,CAAAgB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMhB,YAAY,CAACmB,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEP,IAAA,CAACL,IAAI;IAACgB,QAAQ,EAAEH,gBAAiB;IAACI,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAExDf,IAAA,CAACF,gBAAgB;EAAG,EACf;AAEX;AAEA,IAAMe,MAAM,GAAGnB,UAAU,CAACsB,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,UAAU;IAC1BC,eAAe,EAAE;EACnB,CAAC;EAEDC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAQ;AACzB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}