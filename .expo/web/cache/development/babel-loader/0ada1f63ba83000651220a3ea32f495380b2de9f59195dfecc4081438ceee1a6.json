{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LoginForm from \"./src/screens/LoginScreen\";\nimport RegistrationForm from \"./src/screens/RegistrationScreen\";\nimport \"react-native-gesture-handler\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useFonts = useFonts({\n      \"Roboto-Regular\": require(\"./src/fonts/Roboto/Roboto-Regular.ttf\"),\n      \"Roboto-Medium\": require(\"./src/fonts/Roboto/Roboto-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(AuthStack.Navigator, {\n      children: [_jsx(AuthStack.Screen, {\n        name: \"Register\",\n        component: RegistrationForm\n      }), _jsx(AuthStack.Screen, {\n        name: \"Login\",\n        component: LoginForm\n      })]\n    })\n  });\n}","map":{"version":3,"names":["SplashScreen","useFonts","useCallback","StyleSheet","View","Text","LoginForm","RegistrationForm","createStackNavigator","NavigationContainer","jsx","_jsx","jsxs","_jsxs","AuthStack","preventAutoHideAsync","App","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","children","Navigator","Screen","name","component"],"sources":["/Users/admin/Documents/Stepan GO IT/reactNative/myFirstRNproject/App.js"],"sourcesContent":["import * as SplashScreen from \"expo-splash-screen\";\nimport { useFonts } from \"expo-font\";\nimport { useCallback } from \"react\";\nimport { StyleSheet, View, Text } from \"react-native\";\nimport LoginForm from \"./src/screens/LoginScreen\";\nimport RegistrationForm from \"./src/screens/RegistrationScreen\";\nimport \"react-native-gesture-handler\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nconst AuthStack = createStackNavigator();\n\nSplashScreen.preventAutoHideAsync();\n\nexport default function App() {\n  const [fontsLoaded] = useFonts({\n    \"Roboto-Regular\": require(\"./src/fonts/Roboto/Roboto-Regular.ttf\"),\n    \"Roboto-Medium\": require(\"./src/fonts/Roboto/Roboto-Medium.ttf\"),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <NavigationContainer>\n      <AuthStack.Navigator>\n        <AuthStack.Screen name=\"Register\" component={RegistrationForm} />\n        <AuthStack.Screen name=\"Login\" component={LoginForm} />\n      </AuthStack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"flex-end\",\n//     backgroundColor: \"#fff\",\n//   },\n\n//   text: { color: \"black\" },\n// });\n"],"mappings":";;AAAA,OAAO,KAAKA,YAAY,MAAM,oBAAoB;AAClD,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,WAAW,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEpC,OAAOC,SAAS;AAChB,OAAOC,gBAAgB;AACvB,OAAO,8BAA8B;AACrC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,SAAS,GAAGN,oBAAoB,EAAE;AAExCR,YAAY,CAACe,oBAAoB,EAAE;AAEnC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsBhB,QAAQ,CAAC;MAC7B,gBAAgB,EAAEiB,OAAO,yCAAyC;MAClE,eAAe,EAAEA,OAAO;IAC1B,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAHKI,WAAW,GAAAF,UAAA;EAKlB,IAAMG,gBAAgB,GAAGpB,WAAW,CAAAqB,iBAAA,CAAC,aAAY;IAC/C,IAAIF,WAAW,EAAE;MACf,MAAMrB,YAAY,CAACwB,SAAS,EAAE;IAChC;EACF,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEV,IAAA,CAACF,mBAAmB;IAAAgB,QAAA,EAClBZ,KAAA,CAACC,SAAS,CAACY,SAAS;MAAAD,QAAA,GAClBd,IAAA,CAACG,SAAS,CAACa,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEtB;MAAiB,EAAG,EACjEI,IAAA,CAACG,SAAS,CAACa,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEvB;MAAU,EAAG;IAAA;EACnC,EACF;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}