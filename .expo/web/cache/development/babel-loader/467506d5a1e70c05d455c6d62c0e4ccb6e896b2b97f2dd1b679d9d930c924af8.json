{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\nimport LoginForm from \"../screens/Auth/LoginScreen\";\nimport RegistrationForm from \"../screens/Auth/RegistrationScreen\";\nimport Posts from \"../screens/Home/Posts\";\nimport Profile from \"../screens/Home/Profile\";\nimport CreatePost from \"../screens/Home/CreatePost\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createStackNavigator();\nvar MainTab = createBottomTabNavigator();\nvar useRoute = function useRoute(isAuth) {\n  if (!isAuth) {\n    return _jsxs(AuthStack.Navigator, {\n      children: [_jsx(AuthStack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Login\",\n        component: LoginForm\n      }), _jsx(AuthStack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"Register\",\n        component: RegistrationForm\n      })]\n    });\n  }\n  return _jsxs(MainTab.Navigator, {\n    initialRouteName: \"Posts\",\n    screenOptions: {\n      headerTitleAlign: \"center\",\n      headerTitleStyle: {\n        fontFamily: \"Roboto-Medium\",\n        fontSize: 17,\n        lineHeight: 22\n      },\n      headerStyle: {\n        backgroundColor: \"#ffffff\",\n        borderBottomWidth: 0.5,\n        borderBottomColor: \"#21212120\"\n      },\n      tabBarOptions: {\n        tabBarHideOnKeyboard: true\n      },\n      tabBarShowLabel: false,\n      tabBarStyle: [{\n        display: \"flex\"\n      }, null]\n    },\n    tabBarOptions: {\n      showLabel: false\n    },\n    children: [_jsx(MainTab.Screen, {\n      name: \"Posts\",\n      component: Posts,\n      options: function options(_ref) {\n        var route = _ref.route;\n        var activeRoute = getFocusedRouteNameFromRoute(route);\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              size = _ref2.size,\n              color = _ref2.color;\n            return _jsx(AntDesign, {\n              name: \"appstore-o\",\n              size: size,\n              color: color\n            });\n          },\n          title: \"Публикации\",\n          headerTitleStyle: {\n            fontFamily: \"Roboto-Medium\",\n            color: \"#212121\",\n            fontSize: 17,\n            lineHeight: 22\n          }\n        };\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"CreatePost\",\n      component: CreatePost,\n      options: {\n        tabBarStyle: {\n          display: \"none\"\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n            size = _ref3.size,\n            color = _ref3.color;\n          return _jsx(View, {\n            style: {\n              width: 70,\n              height: 40,\n              backgroundColor: \"#FF6C00\",\n              borderRadius: 20,\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: _jsx(Feather, {\n              name: \"plus\"\n            })\n          });\n        },\n        title: \"Создать публикацию\",\n        headerStyle: {\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"#212121CC\"\n        },\n        headerTitleAlign: \"center\",\n        headerTitleStyle: {\n          fontFamily: \"Roboto-Medium\",\n          color: \"#212121\",\n          fontSize: 17,\n          lineHeight: 22\n        },\n        headerLeft: function headerLeft() {\n          return _jsx(Feather, {\n            name: \"arrow-left\",\n            color: \"#212121CC\",\n            size: 24,\n            style: {\n              marginLeft: 16\n            },\n            onPress: function onPress() {\n              navigation.navigate(\"Posts\");\n            }\n          });\n        }\n      }\n    }), _jsx(MainTab.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        headerShown: false,\n        tabBarShowLabel: false,\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            size = _ref4.size,\n            color = _ref4.color;\n          return _jsx(Feather, {\n            name: \"user\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nexport default useRoute;","map":{"version":3,"names":["React","View","createStackNavigator","createBottomTabNavigator","getFocusedRouteNameFromRoute","AntDesign","Feather","LoginForm","RegistrationForm","Posts","Profile","CreatePost","jsx","_jsx","jsxs","_jsxs","AuthStack","MainTab","useRoute","isAuth","Navigator","children","Screen","options","headerShown","name","component","initialRouteName","screenOptions","headerTitleAlign","headerTitleStyle","fontFamily","fontSize","lineHeight","headerStyle","backgroundColor","borderBottomWidth","borderBottomColor","tabBarOptions","tabBarHideOnKeyboard","tabBarShowLabel","tabBarStyle","display","showLabel","_ref","route","activeRoute","tabBarIcon","_ref2","focused","size","color","title","_ref3","style","width","height","borderRadius","justifyContent","alignItems","headerLeft","marginLeft","onPress","navigation","navigate","_ref4"],"sources":["/Users/admin/Documents/Stepan GO IT/reactNative/myFirstRNproject/src/hooks/router.js"],"sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { getFocusedRouteNameFromRoute } from \"@react-navigation/native\";\nimport { AntDesign, Feather } from \"@expo/vector-icons\";\n\nimport LoginForm from \"../screens/Auth/LoginScreen\";\nimport RegistrationForm from \"../screens/Auth/RegistrationScreen\";\nimport Posts from \"../screens/Home/Posts\";\nimport Profile from \"../screens/Home/Profile\";\nimport CreatePost from \"../screens/Home/CreatePost\";\n\nconst AuthStack = createStackNavigator();\nconst MainTab = createBottomTabNavigator();\n\nconst useRoute = (isAuth) => {\n  if (!isAuth) {\n    return (\n      <AuthStack.Navigator>\n        <AuthStack.Screen\n          options={{ headerShown: false }}\n          name=\"Login\"\n          component={LoginForm}\n        />\n        <AuthStack.Screen\n          options={{ headerShown: false }}\n          name=\"Register\"\n          component={RegistrationForm}\n        />\n      </AuthStack.Navigator>\n    );\n  }\n  return (\n    <MainTab.Navigator\n      initialRouteName=\"Posts\"\n      screenOptions={{\n        headerTitleAlign: \"center\",\n        headerTitleStyle: {\n          fontFamily: \"Roboto-Medium\",\n          fontSize: 17,\n          lineHeight: 22,\n        },\n        headerStyle: {\n          backgroundColor: \"#ffffff\",\n          borderBottomWidth: 0.5,\n          borderBottomColor: \"#21212120\",\n        },\n        tabBarOptions: {\n          tabBarHideOnKeyboard: true,\n        },\n        tabBarShowLabel: false,\n        tabBarStyle: [\n          {\n            display: \"flex\",\n          },\n          null,\n        ],\n      }}\n      tabBarOptions={{ showLabel: false }}\n    >\n      <MainTab.Screen\n        name=\"Posts\"\n        component={Posts}\n        options={({ route }) => {\n          const activeRoute = getFocusedRouteNameFromRoute(route);\n          return {\n            tabBarIcon: ({ focused, size, color }) => (\n              <AntDesign name=\"appstore-o\" size={size} color={color} />\n            ),\n            title: \"Публикации\",\n            headerTitleStyle: {\n              fontFamily: \"Roboto-Medium\",\n              color: \"#212121\",\n              fontSize: 17,\n              lineHeight: 22,\n            },\n          };\n        }}\n      />\n      <MainTab.Screen\n        name=\"CreatePost\"\n        component={CreatePost}\n        options={{\n          tabBarStyle: { display: \"none\" },\n          tabBarIcon: ({ focused, size, color }) => (\n            <View\n              style={{\n                width: 70,\n                height: 40,\n                backgroundColor: \"#FF6C00\",\n                borderRadius: 20,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Feather name=\"plus\" />\n            </View>\n          ),\n          title: \"Создать публикацию\",\n          headerStyle: {\n            borderBottomWidth: 0.5,\n            borderBottomColor: \"#212121CC\",\n          },\n          headerTitleAlign: \"center\",\n          headerTitleStyle: {\n            fontFamily: \"Roboto-Medium\",\n            color: \"#212121\",\n            fontSize: 17,\n            lineHeight: 22,\n          },\n          headerLeft: () => (\n            <Feather\n              name=\"arrow-left\"\n              color=\"#212121CC\"\n              size={24}\n              style={{ marginLeft: 16 }}\n              onPress={() => {\n                navigation.navigate(\"Posts\");\n              }}\n            />\n          ),\n        }}\n      />\n      <MainTab.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          headerShown: false,\n          tabBarShowLabel: false,\n          tabBarIcon: ({ focused, size, color }) => (\n            <Feather name=\"user\" size={size} color={color} />\n          ),\n        }}\n      />\n    </MainTab.Navigator>\n  );\n};\n\nexport default useRoute;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}