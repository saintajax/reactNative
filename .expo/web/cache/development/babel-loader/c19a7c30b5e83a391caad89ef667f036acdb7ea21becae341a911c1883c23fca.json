{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  email: \"\",\n  password: \"\"\n};\nvar LoginForm = function LoginForm() {\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataForm = _useState2[0],\n    setDataForm = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isKeyboardVisible = _useState4[0],\n    setIsKeyboardVisible = _useState4[1];\n  var hideKyeboard = function hideKyeboard() {\n    setIsKeyboardVisible(false);\n    Keyboard.dismiss();\n  };\n  var handleSubmit = function handleSubmit() {\n    setIsKeyboardVisible(false);\n    Keyboard.dismiss();\n    setDataForm(initialState);\n    console.log(dataForm);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: hideKyeboard,\n    children: _jsx(ImageBackground, {\n      source: require(\"../image/bg.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsx(KeyboardAvoidingView, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.form), {}, {\n            marginBottom: isKeyboardVisible ? 32 : 144\n          }),\n          children: [_jsx(Text, {\n            style: styles.titleText,\n            children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0435\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u043E\\u0457 \\u043F\\u043E\\u0448\\u0442\\u0438\",\n            onChangeText: function onChangeText(value) {\n              return setDataForm(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  email: value\n                });\n              });\n            },\n            value: dataForm.email,\n            keyboardType: \"email-address\",\n            onFocus: function onFocus() {\n              return setIsKeyboardVisible(true);\n            },\n            autoCapitalize: \"none\",\n            placeholderTextColor: \"#BDBDBD\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n            onChangeText: function onChangeText(value) {\n              return setDataForm(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  password: value\n                });\n              });\n            },\n            value: dataForm.password,\n            secureTextEntry: true,\n            onFocus: function onFocus() {\n              return setIsKeyboardVisible(true);\n            },\n            placeholderTextColor: \"#BDBDBD\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.btn,\n            onPress: handleSubmit,\n            children: _jsx(Text, {\n              style: styles.textBtn,\n              children: \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"\n            })\n          }), _jsx(Text, {\n            style: styles.text,\n            children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\"\n          })]\n        })\n      })\n    })\n  });\n};\nexport default LoginForm;\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"flex-end\"\n  },\n  container: {\n    backgroundColor: \"#fff\",\n    borderTopStartRadius: 25,\n    borderTopEndRadius: 25,\n    alignItems: \"center\"\n  },\n  titleText: {\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 30,\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginBottom: 33\n  },\n  form: {\n    marginTop: 32,\n    marginBottom: 144\n  },\n  input: {\n    height: 50,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    padding: 15,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 8,\n    color: \"#212121\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400\n  },\n  btn: {\n    height: 50,\n    marginHorizontal: 16,\n    marginTop: 27,\n    marginBottom: 16,\n    justifyContent: \"center\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100\n  },\n  textBtn: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400\n  },\n  text: {\n    textAlign: \"center\",\n    color: \"#1B4371\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","TextInput","View","TouchableOpacity","Platform","Keyboard","KeyboardAvoidingView","Dimensions","TouchableWithoutFeedback","ImageBackground","jsx","_jsx","jsxs","_jsxs","initialState","email","password","LoginForm","_useState","_useState2","_slicedToArray","dataForm","setDataForm","_useState3","_useState4","isKeyboardVisible","setIsKeyboardVisible","hideKyeboard","dismiss","handleSubmit","console","log","onPress","children","source","require","resizeMode","style","styles","image","container","_objectSpread","form","marginBottom","titleText","input","placeholder","onChangeText","value","prevState","keyboardType","onFocus","autoCapitalize","placeholderTextColor","secureTextEntry","btn","textBtn","text","create","flex","justifyContent","backgroundColor","borderTopStartRadius","borderTopEndRadius","alignItems","fontFamily","fontSize","fontWeight","textAlign","marginTop","height","marginHorizontal","padding","borderRadius","color"],"sources":["/Users/admin/Documents/Stepan GO IT/reactNative/myFirstRNproject/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Keyboard,\n  KeyboardAvoidingView,\n  Dimensions,\n  TouchableWithoutFeedback,\n  ImageBackground,\n} from \"react-native\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nconst LoginForm = () => {\n  const [dataForm, setDataForm] = useState(initialState);\n  const [isKeyboardVisible, setIsKeyboardVisible] = useState(false);\n  // const [dimensions, setDimensions] = useState(\n  //   Dimensions.get(\"window\").width - 16 * 2\n  // );\n\n  // useEffect(() => {\n  //   const onChange = () => {\n  //     const width = Dimensions.get(\"window\").width - 16 * 2;\n  //     setDimensions(width);\n  //   };\n  //   const subscription = Dimensions.addEventListener(\"change\", onChange);\n  //   return () => {\n  //     subscription?.remove();\n  //   };\n  // }, []);\n\n  const hideKyeboard = () => {\n    setIsKeyboardVisible(false);\n    Keyboard.dismiss();\n  };\n\n  const handleSubmit = () => {\n    setIsKeyboardVisible(false);\n    Keyboard.dismiss();\n    setDataForm(initialState);\n    console.log(dataForm);\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={hideKyeboard}>\n      <ImageBackground\n        source={require(\"../image/bg.jpg\")}\n        resizeMode=\"cover\"\n        style={styles.image}\n      >\n        <KeyboardAvoidingView\n          // behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.container}\n        >\n          <View\n            style={{\n              ...styles.form,\n              marginBottom: isKeyboardVisible ? 32 : 144,\n              // width: dimensions,\n            }}\n          >\n            <Text style={styles.titleText}>Увійти</Text>\n\n            <TextInput\n              style={styles.input}\n              placeholder=\"Адреса електронної пошти\"\n              onChangeText={(value) =>\n                setDataForm((prevState) => ({ ...prevState, email: value }))\n              }\n              value={dataForm.email}\n              keyboardType=\"email-address\"\n              onFocus={() => setIsKeyboardVisible(true)}\n              autoCapitalize=\"none\"\n              placeholderTextColor=\"#BDBDBD\"\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Пароль\"\n              onChangeText={(value) =>\n                setDataForm((prevState) => ({\n                  ...prevState,\n                  password: value,\n                }))\n              }\n              value={dataForm.password}\n              secureTextEntry={true}\n              onFocus={() => setIsKeyboardVisible(true)}\n              placeholderTextColor=\"#BDBDBD\"\n            />\n            <TouchableOpacity style={styles.btn} onPress={handleSubmit}>\n              <Text style={styles.textBtn}>Увійти</Text>\n            </TouchableOpacity>\n\n            <Text style={styles.text}>Немає акаунта? Зареєструватися</Text>\n          </View>\n        </KeyboardAvoidingView>\n      </ImageBackground>\n    </TouchableWithoutFeedback>\n  );\n};\n\nexport default LoginForm;\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n\n  container: {\n    backgroundColor: \"#fff\",\n    borderTopStartRadius: 25,\n    borderTopEndRadius: 25,\n    alignItems: \"center\",\n  },\n\n  titleText: {\n    fontFamily: \"Roboto-Medium\",\n    fontSize: 30,\n    fontWeight: 500,\n    textAlign: \"center\",\n    marginBottom: 33,\n  },\n\n  form: {\n    marginTop: 32,\n    marginBottom: 144,\n  },\n\n  input: {\n    height: 50,\n    marginHorizontal: 16,\n    marginBottom: 16,\n    padding: 15,\n    backgroundColor: \"#F6F6F6\",\n    borderRadius: 8,\n    color: \"#212121\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400,\n  },\n\n  btn: {\n    height: 50,\n    marginHorizontal: 16,\n    marginTop: 27,\n    marginBottom: 16,\n    justifyContent: \"center\",\n    backgroundColor: \"#FF6C00\",\n    borderRadius: 100,\n  },\n\n  textBtn: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400,\n  },\n\n  text: {\n    textAlign: \"center\",\n    color: \"#1B4371\",\n    fontFamily: \"Roboto-Regular\",\n    fontSize: 16,\n    fontWeight: 400,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}